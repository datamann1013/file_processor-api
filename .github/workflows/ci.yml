# .github/workflows/ci.yml
name: CI Pipeline

on:
  pull_request:
    branches: [test, master]
  push:
    branches: [test, master]

jobs:
  build-on-push:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build & Test
        run: cargo test -- --nocapture

  dev-to-test:
    if: github.event.pull_request.base.ref == 'test'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Check formatting
        run: cargo fmt -- --check

      - name: Lint with Clippy
        run: cargo clippy -- -D warnings

      - name: Dependency & license audit (cargo-deny)
        uses: EmbarkStudios/cargo-deny-action@v0.12.0
        with:
          args: check --deny warnings

      - name: Supply-chain & security score (Scorecard)
        uses: google/scorecard-action@v2

      - name: Unsafe-code detector (cargo-geiger)
        run: |
          cargo install cargo-geiger
          cargo geiger --fail-on unsafe-cnt=0

      - name: Install cargo-fuzz
        run: cargo install cargo-fuzz

      - name: Fuzz testing
        run: cargo fuzz run -- -max_total_time=60

      - name: Run unit tests
        run: cargo test -- --nocapture

  test-to-master:
    if: github.event.pull_request.base.ref == 'master'
    needs: dev-to-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Run integration tests
        run: |
          # Start service (e.g., via Docker)
          # docker run -d --rm -p 50051:50051 file_processor_api:latest
          # Execute integration tests against gRPC endpoint
          cargo test --test integration -- --nocapture

      - name: Manual approval
        if: github.actor == 'datamann1013'
        uses: hmarr/auto-approve-action@v2
